# Check NEORV32 software framework and test processor

name: Processor

on:
  push:
    branches:
    - main
    paths:
    - 'rtl/**'
    - 'sw/**'
    - 'sim/**'
  pull_request:
    branches:
    - main
    paths:
    - 'rtl/**'
    - 'sw/**'
    - 'sim/**'
  workflow_dispatch:

jobs:


  Linux:
    runs-on: ubuntu-latest
    name: 'üêß Ubuntu | Shell script'

    steps:

    - name: 'üß∞ Repository Checkout'
      uses: actions/checkout@v3

    - name: '‚öôÔ∏è Build Software Framework Tests'
      uses: docker://ghcr.io/stnolting/neorv32/sim
      with:
        args: ./do.py BuildAndInstallSoftwareFrameworkTests

    - name: 'üöß Run Processor Hardware Tests with shell script'
      uses: docker://ghcr.io/stnolting/neorv32/sim
      with:
        args: ./sim/simple/ghdl.sh


  VUnit-Container:
    runs-on: ubuntu-latest
    name: 'üõ≥Ô∏è Container | VUnit'

    steps:

    - name: 'üß∞ Repository Checkout'
      uses: actions/checkout@v3

    - name: '‚öôÔ∏è Build and install Processor Check software'
      uses: docker://ghcr.io/stnolting/neorv32/sim
      with:
        args: >-
          make -C sw/example/processor_check
          clean_all
          USER_FLAGS+=-DRUN_CHECK
          USER_FLAGS+=-DUART0_SIM_MODE
          USER_FLAGS+=-DSUPPRESS_OPTIONAL_UART_PRINT
          USER_FLAGS+=-flto
          MARCH=rv32imc
          info
          all

    - name: 'üì§ Archive Processor Check application image'
      uses: actions/upload-artifact@v3
      with:
        name: application
        path: rtl/core/neorv32_application_image.vhd

    - name: 'üöß Run Processor Hardware Tests with VUnit'
      uses: VUnit/vunit_action@master
      with:
        image: ghcr.io/stnolting/neorv32/sim
        cmd: ./sim/run.py --ci-mode -v


  Formal-Container:
    runs-on: ubuntu-latest

    name: 'üõ≥Ô∏è Container | Formal'

    steps:

    - name: 'üß∞ Repository Checkout'
      uses: actions/checkout@v3

    - name: 'üöß Run Processor Hardware Formal Tests with GHDL and SymbiYosys'
      uses: docker://ghcr.io/hdl/amd64/formal/all
      with:
        args: ./formal/test.sh prove


# Windows:
#   runs-on: windows-latest
#   strategy:
#     fail-fast: false
#     matrix:
#       include: [
#         {icon: '‚¨õ', installs: 'MINGW32' },
#         {icon: 'üü¶', installs: 'MINGW64' },
#       ]
#   name: '${{ matrix.icon }} ${{ matrix.installs }} | VUnit'
#   defaults:
#     run:
#       shell: msys2 {0}
#   steps:
#
#   - name: '‚öôÔ∏è git config'
#     run: git config --global core.autocrlf input
#     shell: bash
#
#   - name: 'üß∞ Checkout'
#     uses: actions/checkout@v3
#     with:
#       # The command 'git describe' (used for version) needs the history.
#       fetch-depth: 0
#
#   - name: '${{ matrix.icon }} Setup MSYS2'
#     uses: msys2/setup-msys2@v2
#     with:
#       msystem: ${{ matrix.installs }}
#       update: true
#       install: make
#       pacboy: >
#         ghdl:p
#         python-pip:p
#         riscv64-unknown-elf-gcc:p
#
#   - name: '‚öôÔ∏è Build and install Processor Check software'
#     run: |
#       make -C sw/example/processor_check \
#         RISCV_PREFIX=riscv64-unknown-elf- \
#         clean_all \
#         USER_FLAGS+=-DRUN_CHECK \
#         USER_FLAGS+=-DUART0_SIM_MODE \
#         USER_FLAGS+=-DSUPPRESS_OPTIONAL_UART_PRINT \
#         MARCH=rv32imc \
#         info \
#         all
#
#   - name: 'üêç Install VUnit'
#     run: pip install vunit_hdl
#
#   - name: 'üöß Run Processor Hardware Tests with VUnit'
#     run: ./sim/run.py --ci-mode -v